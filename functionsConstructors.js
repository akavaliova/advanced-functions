"use strict";
// пример функции конструктора
// можем создавать объекты на подобие какого-нибудь шаблона
// это обычая функция, но, должна начинаться с большой буквы и вызываться с помощью оператора "new"
// пишем всегда как обычную функцию, потому что стрелочные ф-ции не могут быть ф-циями конструкторами!!!
// функция-конструктор, ее дача создать как бы сущность(экземпляр) по собственному шаблону
// мы явно не возвращаем какой то результат!!!!!!!!!!!!это все делает под капотом js

// хотим получать имя и возсраст пользователя 

function User (name, age){     //это пример функции конструктора
  this.name = name;            // про this ниже инфа
  this.age = age;
}

function createUser(name, age){  // пример просто сравнение с обычной функцией
  return {
    age:age,
    name:name,
  }
}

let clonedJohn = createUser("John", 42);

let johnUser = new User("John", 42);    //вызываем функцию контсруктор

console.log(clonedJohn); // {age: 42, name: 'John'} мы видим просто объект в результате вызова ф-ции
console.log(johnUser); // User {name: 'John', age: 42} (получили вызвав ф-цию конструктор объект с полем age и с полем name)
                      // но! еще получили эту надпись User, это значит, что этот объект {name: 'John', age: 42} 
                      // является сущностью функции - конструктора User
                      // можем отследить от какой сущности был создан данный объект

// !!!!!!!!!!!!!!!!!!!!!!!так что же такое THIS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


// function User (name, age){ 
// this = {}  ПОД КАПОТОМ ЧТО ДЕЛАЕТСЯ: мы присваиваем в этот контекст некий объект
//   this.name = name; // т.е. берем поле name не существующее, присваиваем в объект то, что прилетает извне из параметра name
//   this.age = age;   // тоже присваиваем какое то значение в этот объект {}
//    return this  (ЭТО ПОД КАПОТОМ ЧТО ДЕЛАЕТСЯ) - возвращаем this т.е. наш объект
// }
// let johnUser = new User("John", 42);   
// console.log(johnUser); //  User {name: 'John', age: 42} - т.е. этот объект создается как бы на основе шаблона:
                                                                              //  this.name = name; 
                                                                              // this.age = age;

// Еще пример

function Animal(name, voice){
  this.name = name;
  this.voice = voice;
  }
  let cat = new Animal('Cleo', 'Meaw');
  let dog = new Animal('Sharif', 'Gav');
  console.log(cat); // Animal {name: 'Cleo', voice: 'Meaw'}
  console.log(dog); // Animal {name: 'Sharif', voice: 'Gav'}
 //у собаки и кота сущность то Animal


